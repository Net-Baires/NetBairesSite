@page
@using ViewComponents
@model NetBaires.Pages.Events.DetailModel
@{
    ViewData["Title"] = "Detail";
}
@await Component.InvokeAsync("Breadcrumb", new BreadcrumbViewModel(@Model.Event.Name, "Detalle de Evento"))

<main>
    <div class="lgx-post-wrapper">
        <!--News-->
        <section>
            <div class="container">
                <div class="row">
                    <div class="col-xs-12">
                        <article>
                            <header>
                                <figure>
                                    <img style="width: 320px;" src="@Model.Event.ImageUrl" alt="New" />
                                </figure>
                                <div class="text-area">
                                    <div class="speaker-info">
                                        <h1 class="title">
                                            @Model.Event.Name
                                        </h1>
                                        <h4 class="subtitle"> @Model.Event.Date.ToString("dddd, dd MMMM yyyy HH:mm:ss")</h4>
                                    </div>
                                    @*<ul class="list-inline lgx-social">
                                            <li><a href="@Model.Speaker.Twitter"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                            <li><a href="@Model.Speaker.Facebook"><i class="fa fa-facebook-f" aria-hidden="true"></i></a></li>
                                            <li><a href="@Model.Speaker.Linkedin"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                            @*<li><a href="#"><i class="fa fa-youtube-play" aria-hidden="true"></i></a></li>
                                                <li><a href="@Model.Speaker.Facebook"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                        </ul>*@
                                </div>
                            </header>
                            <section>
                                <p>
                                    @Html.Raw(Model.Event.Description)
                                </p>
                            </section>

                        </article>
                    </div>
                </div>
            </div><!-- //.CONTAINER -->
        </section>
        <!--News END-->
    </div>
</main>
<section>
    <div id="lgx-speakers" class="lgx-speakers">
        <div class="lgx-inner">
            <div class="container">
                <div class="row">
                    <div class="col-xs-12">
                        <div class="lgx-heading">
                            <h2 class="heading">Speakers del Evento</h2>
                        </div>
                    </div>
                </div>
                @await Component.InvokeAsync("Speakers", Model.Speakers?.Select(x => x.Id).ToList())
            </div>
        </div>
    </div>
</section>

@if (Model.Photos.Any())
{
    <section>
        <div id="lgx-photo-gallery" class="lgx-gallery-popup lgx-photo-gallery-normal lgx-photo-gallery-black">
            <div class="lgx-inner">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="lgx-heading lgx-heading-white">
                                <h2 class="heading">Fotos del Evento @Model.Event.Name</h2>
                                @*<h3 class="subheading">Algunas fotos de los eventos pasados!!</h3>*@
                            </div>
                        </div>
                    </div>
                    @await Component.InvokeAsync("PhotosPreview", Model.Photos)
                </div>
            </div>
        </div>
    </section>

}



